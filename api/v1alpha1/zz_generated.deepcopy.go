//go:build !ignore_autogenerated

/*
Copyright 2023.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeneratedSecret) DeepCopyInto(out *GeneratedSecret) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeneratedSecret.
func (in *GeneratedSecret) DeepCopy() *GeneratedSecret {
	if in == nil {
		return nil
	}
	out := new(GeneratedSecret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretMetadata) DeepCopyInto(out *SecretMetadata) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretMetadata.
func (in *SecretMetadata) DeepCopy() *SecretMetadata {
	if in == nil {
		return nil
	}
	out := new(SecretMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretNamespaceFailure) DeepCopyInto(out *SecretNamespaceFailure) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretNamespaceFailure.
func (in *SecretNamespaceFailure) DeepCopy() *SecretNamespaceFailure {
	if in == nil {
		return nil
	}
	out := new(SecretNamespaceFailure)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretRotator) DeepCopyInto(out *SecretRotator) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretRotator.
func (in *SecretRotator) DeepCopy() *SecretRotator {
	if in == nil {
		return nil
	}
	out := new(SecretRotator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretRotator) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretRotatorList) DeepCopyInto(out *SecretRotatorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecretRotator, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretRotatorList.
func (in *SecretRotatorList) DeepCopy() *SecretRotatorList {
	if in == nil {
		return nil
	}
	out := new(SecretRotatorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecretRotatorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretRotatorSpec) DeepCopyInto(out *SecretRotatorSpec) {
	*out = *in
	in.SecretMetadata.DeepCopyInto(&out.SecretMetadata)
	if in.GeneratedSecrets != nil {
		in, out := &in.GeneratedSecrets, &out.GeneratedSecrets
		*out = make([]GeneratedSecret, len(*in))
		copy(*out, *in)
	}
	in.NamespaceSelector.DeepCopyInto(&out.NamespaceSelector)
	out.ServiceAccount = in.ServiceAccount
	if in.RefreshInterval != nil {
		in, out := &in.RefreshInterval, &out.RefreshInterval
		*out = new(v1.Duration)
		**out = **in
	}
	out.Security = in.Security
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretRotatorSpec.
func (in *SecretRotatorSpec) DeepCopy() *SecretRotatorSpec {
	if in == nil {
		return nil
	}
	out := new(SecretRotatorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretRotatorStatus) DeepCopyInto(out *SecretRotatorStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FailedNamespaces != nil {
		in, out := &in.FailedNamespaces, &out.FailedNamespaces
		*out = make([]SecretNamespaceFailure, len(*in))
		copy(*out, *in)
	}
	if in.ProvisionedNamespaces != nil {
		in, out := &in.ProvisionedNamespaces, &out.ProvisionedNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SecretManagedByNamespaces != nil {
		in, out := &in.SecretManagedByNamespaces, &out.SecretManagedByNamespaces
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretRotatorStatus.
func (in *SecretRotatorStatus) DeepCopy() *SecretRotatorStatus {
	if in == nil {
		return nil
	}
	out := new(SecretRotatorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityDetails) DeepCopyInto(out *SecurityDetails) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityDetails.
func (in *SecurityDetails) DeepCopy() *SecurityDetails {
	if in == nil {
		return nil
	}
	out := new(SecurityDetails)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceAccountDetails) DeepCopyInto(out *ServiceAccountDetails) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceAccountDetails.
func (in *ServiceAccountDetails) DeepCopy() *ServiceAccountDetails {
	if in == nil {
		return nil
	}
	out := new(ServiceAccountDetails)
	in.DeepCopyInto(out)
	return out
}
