# Multi-stage build for local development
# Stage 1: Build the Go binary
FROM golang:1.24-bullseye AS builder

# Install git and ca-certificates (needed for go modules)
RUN apt-get update && apt-get install -y git ca-certificates && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /workspace

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the binary with proper flags
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -a -installsuffix cgo -ldflags="-w -s" \
    -o operator ./main.go

# Stage 2: Create the runtime image
FROM alpine:latest

# Add ca-certificates for SSL
RUN apk --no-cache add ca-certificates

# Create non-root user for security
RUN addgroup -g 1065 -S appgroup && \
    adduser -u 1065 -S appuser -G appgroup

# Set working directory
WORKDIR /app

# Copy the binary from builder stage
COPY --from=builder /workspace/operator .

# Ensure the binary is executable
RUN chmod +x ./operator

# Change ownership to non-root user
RUN chown appuser:appgroup ./operator

# Switch to non-root user
USER appuser

# Run the binary
CMD ["./operator"]
